/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MessageAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6154293292012792269L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MessageAvro\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"correlationId\",\"type\":\"int\"},{\"name\":\"flow\",\"type\":{\"type\":\"record\",\"name\":\"FlowAvro\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"idName\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"variant\",\"type\":\"string\"},{\"name\":\"variantName\",\"type\":\"string\"}]}},{\"name\":\"operation\",\"type\":{\"type\":\"record\",\"name\":\"OperationAvro\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"service\",\"type\":\"string\"},{\"name\":\"environment\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"durationUs\",\"type\":\"int\"}]}},{\"name\":\"entity\",\"type\":{\"type\":\"record\",\"name\":\"EntityAvro\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"idName\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}]}},{\"name\":\"user\",\"type\":{\"type\":\"record\",\"name\":\"UserAvro\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"idName\",\"type\":\"string\"},{\"name\":\"companyId\",\"type\":\"string\"},{\"name\":\"companyIdName\",\"type\":\"string\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MessageAvro> ENCODER =
      new BinaryMessageEncoder<MessageAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MessageAvro> DECODER =
      new BinaryMessageDecoder<MessageAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MessageAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MessageAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MessageAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MessageAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MessageAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MessageAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MessageAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MessageAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int id;
   private java.lang.CharSequence name;
   private java.lang.CharSequence type;
   private long timestamp;
   private int correlationId;
   private FlowAvro flow;
   private OperationAvro operation;
   private EntityAvro entity;
   private UserAvro user;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MessageAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param type The new value for type
   * @param timestamp The new value for timestamp
   * @param correlationId The new value for correlationId
   * @param flow The new value for flow
   * @param operation The new value for operation
   * @param entity The new value for entity
   * @param user The new value for user
   */
  public MessageAvro(java.lang.Integer id, java.lang.CharSequence name, java.lang.CharSequence type, java.lang.Long timestamp, java.lang.Integer correlationId, FlowAvro flow, OperationAvro operation, EntityAvro entity, UserAvro user) {
    this.id = id;
    this.name = name;
    this.type = type;
    this.timestamp = timestamp;
    this.correlationId = correlationId;
    this.flow = flow;
    this.operation = operation;
    this.entity = entity;
    this.user = user;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return type;
    case 3: return timestamp;
    case 4: return correlationId;
    case 5: return flow;
    case 6: return operation;
    case 7: return entity;
    case 8: return user;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: type = (java.lang.CharSequence)value$; break;
    case 3: timestamp = (java.lang.Long)value$; break;
    case 4: correlationId = (java.lang.Integer)value$; break;
    case 5: flow = (FlowAvro)value$; break;
    case 6: operation = (OperationAvro)value$; break;
    case 7: entity = (EntityAvro)value$; break;
    case 8: user = (UserAvro)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public int getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(int value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'correlationId' field.
   * @return The value of the 'correlationId' field.
   */
  public int getCorrelationId() {
    return correlationId;
  }


  /**
   * Sets the value of the 'correlationId' field.
   * @param value the value to set.
   */
  public void setCorrelationId(int value) {
    this.correlationId = value;
  }

  /**
   * Gets the value of the 'flow' field.
   * @return The value of the 'flow' field.
   */
  public FlowAvro getFlow() {
    return flow;
  }


  /**
   * Sets the value of the 'flow' field.
   * @param value the value to set.
   */
  public void setFlow(FlowAvro value) {
    this.flow = value;
  }

  /**
   * Gets the value of the 'operation' field.
   * @return The value of the 'operation' field.
   */
  public OperationAvro getOperation() {
    return operation;
  }


  /**
   * Sets the value of the 'operation' field.
   * @param value the value to set.
   */
  public void setOperation(OperationAvro value) {
    this.operation = value;
  }

  /**
   * Gets the value of the 'entity' field.
   * @return The value of the 'entity' field.
   */
  public EntityAvro getEntity() {
    return entity;
  }


  /**
   * Sets the value of the 'entity' field.
   * @param value the value to set.
   */
  public void setEntity(EntityAvro value) {
    this.entity = value;
  }

  /**
   * Gets the value of the 'user' field.
   * @return The value of the 'user' field.
   */
  public UserAvro getUser() {
    return user;
  }


  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(UserAvro value) {
    this.user = value;
  }

  /**
   * Creates a new MessageAvro RecordBuilder.
   * @return A new MessageAvro RecordBuilder
   */
  public static MessageAvro.Builder newBuilder() {
    return new MessageAvro.Builder();
  }

  /**
   * Creates a new MessageAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MessageAvro RecordBuilder
   */
  public static MessageAvro.Builder newBuilder(MessageAvro.Builder other) {
    if (other == null) {
      return new MessageAvro.Builder();
    } else {
      return new MessageAvro.Builder(other);
    }
  }

  /**
   * Creates a new MessageAvro RecordBuilder by copying an existing MessageAvro instance.
   * @param other The existing instance to copy.
   * @return A new MessageAvro RecordBuilder
   */
  public static MessageAvro.Builder newBuilder(MessageAvro other) {
    if (other == null) {
      return new MessageAvro.Builder();
    } else {
      return new MessageAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for MessageAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MessageAvro>
    implements org.apache.avro.data.RecordBuilder<MessageAvro> {

    private int id;
    private java.lang.CharSequence name;
    private java.lang.CharSequence type;
    private long timestamp;
    private int correlationId;
    private FlowAvro flow;
    private FlowAvro.Builder flowBuilder;
    private OperationAvro operation;
    private OperationAvro.Builder operationBuilder;
    private EntityAvro entity;
    private EntityAvro.Builder entityBuilder;
    private UserAvro user;
    private UserAvro.Builder userBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(MessageAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[4].schema(), other.correlationId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.flow)) {
        this.flow = data().deepCopy(fields()[5].schema(), other.flow);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasFlowBuilder()) {
        this.flowBuilder = FlowAvro.newBuilder(other.getFlowBuilder());
      }
      if (isValidValue(fields()[6], other.operation)) {
        this.operation = data().deepCopy(fields()[6].schema(), other.operation);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasOperationBuilder()) {
        this.operationBuilder = OperationAvro.newBuilder(other.getOperationBuilder());
      }
      if (isValidValue(fields()[7], other.entity)) {
        this.entity = data().deepCopy(fields()[7].schema(), other.entity);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasEntityBuilder()) {
        this.entityBuilder = EntityAvro.newBuilder(other.getEntityBuilder());
      }
      if (isValidValue(fields()[8], other.user)) {
        this.user = data().deepCopy(fields()[8].schema(), other.user);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasUserBuilder()) {
        this.userBuilder = UserAvro.newBuilder(other.getUserBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MessageAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(MessageAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[4].schema(), other.correlationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.flow)) {
        this.flow = data().deepCopy(fields()[5].schema(), other.flow);
        fieldSetFlags()[5] = true;
      }
      this.flowBuilder = null;
      if (isValidValue(fields()[6], other.operation)) {
        this.operation = data().deepCopy(fields()[6].schema(), other.operation);
        fieldSetFlags()[6] = true;
      }
      this.operationBuilder = null;
      if (isValidValue(fields()[7], other.entity)) {
        this.entity = data().deepCopy(fields()[7].schema(), other.entity);
        fieldSetFlags()[7] = true;
      }
      this.entityBuilder = null;
      if (isValidValue(fields()[8], other.user)) {
        this.user = data().deepCopy(fields()[8].schema(), other.user);
        fieldSetFlags()[8] = true;
      }
      this.userBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public int getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public MessageAvro.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public MessageAvro.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public MessageAvro.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public MessageAvro.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public MessageAvro.Builder setType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public MessageAvro.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public MessageAvro.Builder setTimestamp(long value) {
      validate(fields()[3], value);
      this.timestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public MessageAvro.Builder clearTimestamp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'correlationId' field.
      * @return The value.
      */
    public int getCorrelationId() {
      return correlationId;
    }


    /**
      * Sets the value of the 'correlationId' field.
      * @param value The value of 'correlationId'.
      * @return This builder.
      */
    public MessageAvro.Builder setCorrelationId(int value) {
      validate(fields()[4], value);
      this.correlationId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'correlationId' field has been set.
      * @return True if the 'correlationId' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'correlationId' field.
      * @return This builder.
      */
    public MessageAvro.Builder clearCorrelationId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'flow' field.
      * @return The value.
      */
    public FlowAvro getFlow() {
      return flow;
    }


    /**
      * Sets the value of the 'flow' field.
      * @param value The value of 'flow'.
      * @return This builder.
      */
    public MessageAvro.Builder setFlow(FlowAvro value) {
      validate(fields()[5], value);
      this.flowBuilder = null;
      this.flow = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'flow' field has been set.
      * @return True if the 'flow' field has been set, false otherwise.
      */
    public boolean hasFlow() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'flow' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public FlowAvro.Builder getFlowBuilder() {
      if (flowBuilder == null) {
        if (hasFlow()) {
          setFlowBuilder(FlowAvro.newBuilder(flow));
        } else {
          setFlowBuilder(FlowAvro.newBuilder());
        }
      }
      return flowBuilder;
    }

    /**
     * Sets the Builder instance for the 'flow' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public MessageAvro.Builder setFlowBuilder(FlowAvro.Builder value) {
      clearFlow();
      flowBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'flow' field has an active Builder instance
     * @return True if the 'flow' field has an active Builder instance
     */
    public boolean hasFlowBuilder() {
      return flowBuilder != null;
    }

    /**
      * Clears the value of the 'flow' field.
      * @return This builder.
      */
    public MessageAvro.Builder clearFlow() {
      flow = null;
      flowBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'operation' field.
      * @return The value.
      */
    public OperationAvro getOperation() {
      return operation;
    }


    /**
      * Sets the value of the 'operation' field.
      * @param value The value of 'operation'.
      * @return This builder.
      */
    public MessageAvro.Builder setOperation(OperationAvro value) {
      validate(fields()[6], value);
      this.operationBuilder = null;
      this.operation = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'operation' field has been set.
      * @return True if the 'operation' field has been set, false otherwise.
      */
    public boolean hasOperation() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'operation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public OperationAvro.Builder getOperationBuilder() {
      if (operationBuilder == null) {
        if (hasOperation()) {
          setOperationBuilder(OperationAvro.newBuilder(operation));
        } else {
          setOperationBuilder(OperationAvro.newBuilder());
        }
      }
      return operationBuilder;
    }

    /**
     * Sets the Builder instance for the 'operation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public MessageAvro.Builder setOperationBuilder(OperationAvro.Builder value) {
      clearOperation();
      operationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'operation' field has an active Builder instance
     * @return True if the 'operation' field has an active Builder instance
     */
    public boolean hasOperationBuilder() {
      return operationBuilder != null;
    }

    /**
      * Clears the value of the 'operation' field.
      * @return This builder.
      */
    public MessageAvro.Builder clearOperation() {
      operation = null;
      operationBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'entity' field.
      * @return The value.
      */
    public EntityAvro getEntity() {
      return entity;
    }


    /**
      * Sets the value of the 'entity' field.
      * @param value The value of 'entity'.
      * @return This builder.
      */
    public MessageAvro.Builder setEntity(EntityAvro value) {
      validate(fields()[7], value);
      this.entityBuilder = null;
      this.entity = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'entity' field has been set.
      * @return True if the 'entity' field has been set, false otherwise.
      */
    public boolean hasEntity() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'entity' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public EntityAvro.Builder getEntityBuilder() {
      if (entityBuilder == null) {
        if (hasEntity()) {
          setEntityBuilder(EntityAvro.newBuilder(entity));
        } else {
          setEntityBuilder(EntityAvro.newBuilder());
        }
      }
      return entityBuilder;
    }

    /**
     * Sets the Builder instance for the 'entity' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public MessageAvro.Builder setEntityBuilder(EntityAvro.Builder value) {
      clearEntity();
      entityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'entity' field has an active Builder instance
     * @return True if the 'entity' field has an active Builder instance
     */
    public boolean hasEntityBuilder() {
      return entityBuilder != null;
    }

    /**
      * Clears the value of the 'entity' field.
      * @return This builder.
      */
    public MessageAvro.Builder clearEntity() {
      entity = null;
      entityBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'user' field.
      * @return The value.
      */
    public UserAvro getUser() {
      return user;
    }


    /**
      * Sets the value of the 'user' field.
      * @param value The value of 'user'.
      * @return This builder.
      */
    public MessageAvro.Builder setUser(UserAvro value) {
      validate(fields()[8], value);
      this.userBuilder = null;
      this.user = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'user' field has been set.
      * @return True if the 'user' field has been set, false otherwise.
      */
    public boolean hasUser() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'user' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public UserAvro.Builder getUserBuilder() {
      if (userBuilder == null) {
        if (hasUser()) {
          setUserBuilder(UserAvro.newBuilder(user));
        } else {
          setUserBuilder(UserAvro.newBuilder());
        }
      }
      return userBuilder;
    }

    /**
     * Sets the Builder instance for the 'user' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public MessageAvro.Builder setUserBuilder(UserAvro.Builder value) {
      clearUser();
      userBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'user' field has an active Builder instance
     * @return True if the 'user' field has an active Builder instance
     */
    public boolean hasUserBuilder() {
      return userBuilder != null;
    }

    /**
      * Clears the value of the 'user' field.
      * @return This builder.
      */
    public MessageAvro.Builder clearUser() {
      user = null;
      userBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MessageAvro build() {
      try {
        MessageAvro record = new MessageAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.timestamp = fieldSetFlags()[3] ? this.timestamp : (java.lang.Long) defaultValue(fields()[3]);
        record.correlationId = fieldSetFlags()[4] ? this.correlationId : (java.lang.Integer) defaultValue(fields()[4]);
        if (flowBuilder != null) {
          try {
            record.flow = this.flowBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("flow"));
            throw e;
          }
        } else {
          record.flow = fieldSetFlags()[5] ? this.flow : (FlowAvro) defaultValue(fields()[5]);
        }
        if (operationBuilder != null) {
          try {
            record.operation = this.operationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("operation"));
            throw e;
          }
        } else {
          record.operation = fieldSetFlags()[6] ? this.operation : (OperationAvro) defaultValue(fields()[6]);
        }
        if (entityBuilder != null) {
          try {
            record.entity = this.entityBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("entity"));
            throw e;
          }
        } else {
          record.entity = fieldSetFlags()[7] ? this.entity : (EntityAvro) defaultValue(fields()[7]);
        }
        if (userBuilder != null) {
          try {
            record.user = this.userBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("user"));
            throw e;
          }
        } else {
          record.user = fieldSetFlags()[8] ? this.user : (UserAvro) defaultValue(fields()[8]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MessageAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<MessageAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MessageAvro>
    READER$ = (org.apache.avro.io.DatumReader<MessageAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.id);

    out.writeString(this.name);

    out.writeString(this.type);

    out.writeLong(this.timestamp);

    out.writeInt(this.correlationId);

    this.flow.customEncode(out);

    this.operation.customEncode(out);

    this.entity.customEncode(out);

    this.user.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readInt();

      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

      this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);

      this.timestamp = in.readLong();

      this.correlationId = in.readInt();

      if (this.flow == null) {
        this.flow = new FlowAvro();
      }
      this.flow.customDecode(in);

      if (this.operation == null) {
        this.operation = new OperationAvro();
      }
      this.operation.customDecode(in);

      if (this.entity == null) {
        this.entity = new EntityAvro();
      }
      this.entity.customDecode(in);

      if (this.user == null) {
        this.user = new UserAvro();
      }
      this.user.customDecode(in);

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readInt();
          break;

        case 1:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        case 2:
          this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
          break;

        case 3:
          this.timestamp = in.readLong();
          break;

        case 4:
          this.correlationId = in.readInt();
          break;

        case 5:
          if (this.flow == null) {
            this.flow = new FlowAvro();
          }
          this.flow.customDecode(in);
          break;

        case 6:
          if (this.operation == null) {
            this.operation = new OperationAvro();
          }
          this.operation.customDecode(in);
          break;

        case 7:
          if (this.entity == null) {
            this.entity = new EntityAvro();
          }
          this.entity.customDecode(in);
          break;

        case 8:
          if (this.user == null) {
            this.user = new UserAvro();
          }
          this.user.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










